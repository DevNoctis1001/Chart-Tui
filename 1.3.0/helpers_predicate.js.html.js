ne.util.defineNamespace("fedoc.content", {});
fedoc.content["helpers_predicate.js.html"] = "      <div id=\"main\" class=\"main\">\n\n\n\n    \n    <section>\n        <article>\n            <pre class=\"prettyprint source linenums\"><code>/**\n * @fileoverview Predicate.\n * @author NHN Ent.\n *         FE Development Team &lt;dl_javascript@nhnent.com>\n */\n\n'use strict';\n\nvar chartConst = require('../const');\n\n/**\n * predicate.\n * @module predicate\n */\nvar predicate = {\n    /**\n     * Whether bar chart or not.\n     * @memberOf module:predicate\n     * @param {string} chartType chart type\n     * @returns {boolean} result boolean\n     */\n    isBarChart: function(chartType) {\n        return chartType === chartConst.CHART_TYPE_BAR;\n    },\n\n    /**\n     * Whether line chart or not.\n     * @memberOf module:predicate\n     * @param {string} chartType chart type\n     * @returns {boolean} result boolean\n     */\n    isLineChart: function(chartType) {\n        return chartType === chartConst.CHART_TYPE_LINE;\n    },\n\n    /**\n     * Whether line type chart or not.\n     * @memberOf module:predicate\n     * @param {string} chartType chart type\n     * @returns {boolean} result boolean\n     */\n    isLineTypeChart: function(chartType) {\n        return this.isLineChart(chartType) || chartType === chartConst.CHART_TYPE_AREA;\n    },\n\n    /**\n     * Whether pie chart or not.\n     * @memberOf module:predicate\n     * @param {string} chartType chart type\n     * @returns {boolean} result boolean\n     */\n    isPieChart: function(chartType) {\n        return chartType === chartConst.CHART_TYPE_PIE;\n    },\n\n    /**\n     * Whether outer legend align or not.\n     * @memberOf module:predicate\n     * @param {string} align legend type\n     * @returns {boolean} result boolean\n     */\n    isOuterLegendAlign: function(align) {\n        return align === chartConst.LEGEND_ALIGN_OUTER;\n    },\n\n    /**\n     * Whether center legend align or not.\n     * @memberOf module:predicate\n     * @param {string} align legend type\n     * @returns {boolean} result boolean\n     */\n    isCenterLegendAlign: function(align) {\n        return align === chartConst.LEGEND_TYPE_CENTER;\n    },\n\n    /**\n     * Whether legend align of pie chart or not.\n     * @memberOf module:predicate\n     * @param {?string} align chart type\n     * @returns {boolean} result boolean\n     */\n    isPieLegendAlign: function(align) {\n        var result = false;\n        if (align) {\n            result = this.isOuterLegendAlign(align) || this.isCenterLegendAlign(align);\n        }\n        return result;\n    }\n};\n\nmodule.exports = predicate;\n</code></pre>\n        </article>\n    </section>\n\n\n\n</div>\n\n"