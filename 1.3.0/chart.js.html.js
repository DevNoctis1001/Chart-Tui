ne.util.defineNamespace("fedoc.content", {});
fedoc.content["chart.js.html"] = "      <div id=\"main\" class=\"main\">\n\n\n\n    \n    <section>\n        <article>\n            <pre class=\"prettyprint source linenums\"><code>/**\n * @fileoverview chart.js is entry point of Toast UI Chart.\n * @author NHN Ent.\n *         FE Development Team &lt;dl_javascript@nhnent.com>\n */\n'use strict';\n\nvar chartConst = require('./const'),\n    chartFactory = require('./factories/chartFactory'),\n    pluginFactory = require('./factories/pluginFactory'),\n    themeFactory = require('./factories/themeFactory');\n\nvar _createChart;\n\nrequire('./polyfill');\nrequire('./code-snippet-util');\nrequire('./registerCharts');\nrequire('./registerThemes');\n\n/**\n * NHN Entertainment Toast UI Chart.\n * @namespace tui.chart\n */\ntui.util.defineNamespace('tui.chart');\n\n/**\n * Create chart.\n * @param {HTMLElement} container container\n * @param {array.&lt;array>} data chart data\n * @param {{\n *   chart: {\n *     width: number,\n *     height: number,\n *     title: string,\n *     format: string\n *   },\n *   yAxis: {\n *     title: string,\n *     min: number\n *   },\n *   xAxis: {\n *     title: strig,\n *     min: number\n *   },\n *   tooltip: {\n *     suffix: string,\n *     template: string\n *   },\n *   theme: string\n * }} options chart options\n * @returns {object} chart instance.\n * @private\n * @ignore\n */\n_createChart = function(container, data, options) {\n    var themeName, theme, chart;\n    options = options || {};\n    themeName = options.theme || chartConst.DEFAULT_THEME_NAME;\n    theme = themeFactory.get(themeName);\n\n    chart = chartFactory.get(options.chartType, data, theme, options);\n    container.appendChild(chart.render());\n    chart.animateChart();\n\n    return chart;\n};\n\n/**\n * Bar chart creator.\n * @memberOf tui.chart\n * @param {HTMLElement} container chart container\n * @param {object} data chart data\n *      @param {array.&lt;string>} data.categories categories\n *      @param {array.&lt;array>} data.series series data\n * @param {object} options chart options\n *      @param {object} options.chart chart options\n *          @param {number} options.chart.width chart width\n *          @param {number} options.chart.height chart height\n *          @param {string} options.chart.title chart title\n *          @param {string} options.chart.format value format\n *      @param {object} options.yAxis options of vertical axis\n *          @param {string} options.yAxis.title title of vertical axis\n *          @param {number} options.yAxis.labelInterval label interval of vertical axis\n *      @param {object} options.xAxis options of horizontal axis\n *          @param {string} options.xAxis.title title of horizontal axis\n *          @param {number} options.xAxis.min minimal value of horizontal axis\n *          @param {number} options.xAxis.max maximum value of horizontal axis\n *      @param {object} options.series options of series\n *          @param {string} options.series.stacked stacked type\n *          @param {boolean} options.series.showLabel whether show label or not\n *          @param {number} options.series.barWidth bar width\n *          @param {boolean} options.series.hasSelection whether has selection or not\n *      @param {object} options.tooltip options of tooltip\n *          @param {string} options.tooltip.suffix suffix of tooltip\n *          @param {string} options.tooltip.template template of tooltip\n *          @param {string} options.tooltip.align tooltip align option\n *          @param {object} options.tooltip.position relative position\n *              @param {number} options.tooltip.position.left position left\n *              @param {number} options.tooltip.position.top position top\n *          @param {boolean} options.tooltip.grouped whether group tooltip or not\n *      @param {object} options.legend options of legend\n *          @param {string} options.legend.align legend align\n *      @param {string} options.theme theme name\n *      @param {string} options.libType graph library type\n * @returns {object} bar chart\n * @example\n * var container = document.getElementById('container-id'),\n *     data = {\n *       categories: ['cate1', 'cate2', 'cate3'],\n *       series: [\n *         {\n *           name: 'Legend1',\n *           data: [20, 30, 50]\n *         },\n *         {\n *           name: 'Legend2',\n *           data: [40, 40, 60]\n *         },\n *         {\n *           name: 'Legend3',\n *           data: [60, 50, 10]\n *         },\n *         {\n *           name: 'Legend4',\n *           data: [80, 10, 70]\n *         }\n *       ]\n *     },\n *     options = {\n *       chart: {\n *         title: 'Bar Chart'\n *       },\n *       yAxis: {\n *         title: 'Y Axis'\n *       },\n *       xAxis: {\n *         title: 'X Axis'\n *       }\n *     };\n * tui.chart.barChart(container, data, options);\n */\ntui.chart.barChart = function(container, data, options) {\n    options = options || {};\n    options.chartType = chartConst.CHART_TYPE_BAR;\n    return _createChart(container, data, options);\n};\n\n/**\n * Column chart creator.\n * @memberOf tui.chart\n * @param {HTMLElement} container chart container\n * @param {object} data chart data\n *      @param {array.&lt;string>} data.categories categories\n *      @param {array.&lt;array>} data.series series data\n * @param {object} options chart options\n *      @param {object} options.chart chart options\n *          @param {number} options.chart.width chart width\n *          @param {number} options.chart.height chart height\n *          @param {string} options.chart.title chart title\n *          @param {string} options.chart.format value format\n *      @param {object} options.yAxis options of vertical axis\n *          @param {string} options.yAxis.title title of vertical axis\n *          @param {number} options.yAxis.min minimal value of vertical axis\n *          @param {number} options.yAxis.max maximum value of vertical axis\n *      @param {object} options.xAxis options of horizontal axis\n *          @param {string} options.xAxis.title title of horizontal axis\n *          @param {number} options.xAxis.labelInterval label interval of horizontal axis\n *      @param {object} options.series options of series\n *          @param {string} options.series.stacked stacked type\n *          @param {boolean} options.series.showLabel whether show label or not\n *          @param {number} options.series.barWidth bar width\n *          @param {boolean} options.series.hasSelection whether has selection or not\n *      @param {object} options.tooltip options of tooltip\n *          @param {string} options.tooltip.suffix suffix of tooltip\n *          @param {string} options.tooltip.template template of tooltip\n *          @param {string} options.tooltip.align tooltip align option\n *          @param {object} options.tooltip.position relative position\n *              @param {number} options.tooltip.position.left position left\n *              @param {number} options.tooltip.position.top position top\n *          @param {boolean} options.tooltip.grouped whether group tooltip or not\n *      @param {object} options.legend options of legend\n *          @param {string} options.legend.align legend align\n *      @param {string} options.theme theme name\n *      @param {string} options.libType graph library type\n * @returns {object} column chart\n * @example\n * var container = document.getElementById('container-id'),\n *     data = {\n *       categories: ['cate1', 'cate2', 'cate3'],\n *       series: [\n *         {\n *           name: 'Legend1',\n *           data: [20, 30, 50]\n *         },\n *         {\n *           name: 'Legend2',\n *           data: [40, 40, 60]\n *         },\n *         {\n *           name: 'Legend3',\n *           data: [60, 50, 10]\n *         },\n *         {\n *           name: 'Legend4',\n *           data: [80, 10, 70]\n *         }\n *       ]\n *     },\n *     options = {\n *       chart: {\n *         title: 'Column Chart'\n *       },\n *       yAxis: {\n *         title: 'Y Axis'\n *       },\n *       xAxis: {\n *         title: 'X Axis'\n *       }\n *     };\n * tui.chart.columnChart(container, data, options);\n */\ntui.chart.columnChart = function(container, data, options) {\n    options = options || {};\n    options.chartType = chartConst.CHART_TYPE_COLUMN;\n    return _createChart(container, data, options);\n};\n\n/**\n * Line chart creator.\n * @memberOf tui.chart\n * @param {HTMLElement} container chart container\n * @param {object} data chart data\n *      @param {array.&lt;string>} data.categories categories\n *      @param {array.&lt;array>} data.series series data\n * @param {object} options chart options\n *      @param {object} options.chart chart options\n *          @param {number} options.chart.width chart width\n *          @param {number} options.chart.height chart height\n *          @param {string} options.chart.title chart title\n *          @param {string} options.chart.format value format\n *      @param {object} options.yAxis options of vertical axis\n *          @param {string} options.yAxis.title title of vertical axis\n *          @param {number} options.yAxis.min minimal value of vertical axis\n *          @param {number} options.yAxis.max maximum value of vertical axis\n *      @param {object} options.xAxis options of horizontal axis\n *          @param {string} options.xAxis.title title of horizontal axis\n *          @param {number} options.xAxis.labelInterval label interval of horizontal axis\n *      @param {object} options.series options of series\n *          @param {boolean} options.series.hasDot whether has dot or not\n *          @param {boolean} options.series.showLabel whether show label or not\n *          @param {boolean} options.series.hasSelection whether has selection or not\n *      @param {object} options.tooltip options of tooltip\n *          @param {string} options.tooltip.suffix suffix of tooltip\n *          @param {string} options.tooltip.template template of tooltip\n *          @param {string} options.tooltip.align tooltip align option\n *          @param {object} options.tooltip.position relative position\n *              @param {number} options.tooltip.position.left position left\n *              @param {number} options.tooltip.position.top position top\n *          @param {boolean} options.tooltip.grouped whether group tooltip or not\n *      @param {object} options.legend options of legend\n *          @param {string} options.legend.align legend align\n *      @param {string} options.theme theme name\n *      @param {string} options.libType graph library type\n * @returns {object} bar chart\n * @example\n * var container = document.getElementById('container-id'),\n *     data = {\n *       categories: ['cate1', 'cate2', 'cate3'],\n *       series: [\n *         {\n *           name: 'Legend1',\n *           data: [20, 30, 50]\n *         },\n *         {\n *           name: 'Legend2',\n *           data: [40, 40, 60]\n *         },\n *         {\n *           name: 'Legend3',\n *           data: [60, 50, 10]\n *         },\n *         {\n *           name: 'Legend4',\n *           data: [80, 10, 70]\n *         }\n *       ]\n *     },\n *     options = {\n *       chart: {\n *         title: 'Line Chart'\n *       },\n *       yAxis: {\n *         title: 'Y Axis'\n *       },\n *       xAxis: {\n *         title: 'X Axis'\n *       },\n *       series: {\n *         hasDot: true\n *       }\n *     };\n * tui.chart.lineChart(container, data, options);\n */\ntui.chart.lineChart = function(container, data, options) {\n    options = options || {};\n    options.chartType = chartConst.CHART_TYPE_LINE;\n    return _createChart(container, data, options);\n};\n\n/**\n * Area chart creator.\n * @memberOf tui.chart\n * @param {HTMLElement} container chart container\n * @param {object} data chart data\n *      @param {array.&lt;string>} data.categories categories\n *      @param {array.&lt;array>} data.series series data\n * @param {object} options chart options\n *      @param {object} options.chart chart options\n *          @param {number} options.chart.width chart width\n *          @param {number} options.chart.height chart height\n *          @param {string} options.chart.title chart title\n *          @param {string} options.chart.format value format\n *      @param {object} options.yAxis options of vertical axis\n *          @param {string} options.yAxis.title title of vertical axis\n *          @param {number} options.yAxis.min minimal value of vertical axis\n *          @param {number} options.yAxis.max maximum value of vertical axis\n *      @param {object} options.xAxis options of horizontal axis\n *          @param {string} options.xAxis.title title of horizontal axis\n *          @param {number} options.xAxis.labelInterval label interval of horizontal axis\n *      @param {object} options.series options of series\n *          @param {boolean} options.series.hasDot whether has dot or not\n *          @param {boolean} options.series.showLabel whether show label or not\n *          @param {boolean} options.series.hasSelection whether has selection or not\n *      @param {object} options.tooltip options of tooltip\n *          @param {string} options.tooltip.suffix suffix of tooltip\n *          @param {string} options.tooltip.template template of tooltip\n *          @param {string} options.tooltip.align tooltip align option\n *          @param {object} options.tooltip.position relative position\n *              @param {number} options.tooltip.position.left position left\n *              @param {number} options.tooltip.position.top position top\n *          @param {boolean} options.tooltip.grouped whether group tooltip or not\n *      @param {object} options.legend options of legend\n *          @param {string} options.legend.align legend align\n *      @param {string} options.theme theme name\n *      @param {string} options.libType graph library type\n * @returns {object} bar chart\n * @example\n * var container = document.getElementById('container-id'),\n *     data = {\n *       categories: ['cate1', 'cate2', 'cate3'],\n *       series: [\n *         {\n *           name: 'Legend1',\n *           data: [20, 30, 50]\n *         },\n *         {\n *           name: 'Legend2',\n *           data: [40, 40, 60]\n *         },\n *         {\n *           name: 'Legend3',\n *           data: [60, 50, 10]\n *         },\n *         {\n *           name: 'Legend4',\n *           data: [80, 10, 70]\n *         }\n *       ]\n *     },\n *     options = {\n *       chart: {\n *         title: 'Area Chart'\n *       },\n *       yAxis: {\n *         title: 'Y Axis'\n *       },\n *       xAxis: {\n *         title: 'X Axis'\n *       }\n *     };\n * tui.chart.areaChart(container, data, options);\n */\ntui.chart.areaChart = function(container, data, options) {\n    options = options || {};\n    options.chartType = chartConst.CHART_TYPE_AREA;\n    return _createChart(container, data, options);\n};\n\n/**\n * Combo chart creator.\n * @memberOf tui.chart\n * @param {HTMLElement} container chart container\n * @param {object} data chart data\n *      @param {array.&lt;string>} data.categories categories\n *      @param {array.&lt;array>} data.series series data\n * @param {object} options chart options\n *      @param {object} options.chart chart options\n *          @param {number} options.chart.width chart width\n *          @param {number} options.chart.height chart height\n *          @param {string} options.chart.title chart title\n *          @param {string} options.chart.format value format\n *      @param {object[]} options.yAxis options of vertical axis\n *          @param {string} options.yAxis[].title title of vertical axis\n *          @param {number} options.yAxis[].min minimal value of vertical axis\n *          @param {number} options.yAxis[].max maximum value of vertical axis\n *      @param {object} options.xAxis options of horizontal axis\n *          @param {string} options.xAxis.title title of horizontal axis\n *          @param {number} options.xAxis.labelInterval label interval of horizontal axis\n *      @param {object} options.series options of series\n *          @param {object} options.series.column options of column series\n *              @param {string} options.series.column.stacked stacked type\n *              @param {boolean} options.series.column.showLabel whether show label or not\n *              @param {number} options.series.column.barWidth bar width\n *              @param {boolean} options.series.column.hasSelection whether has selection or not\n *          @param {object} options.series.line options of line series\n *              @param {boolean} options.series.line.hasDot whether has dot or not\n *              @param {boolean} options.series.line.showLabel whether show label or not\n *              @param {boolean} options.series.line.hasSelection whether has selection or not\n *      @param {object} options.tooltip options of tooltip\n *          @param {object} options.tooltip.column options of column tooltip\n *              @param {string} options.tooltip.column.suffix suffix of tooltip\n *              @param {string} options.tooltip.column.template template of tooltip\n *              @param {string} options.tooltip.column.align tooltip align option\n *              @param {object} options.tooltip.column.position relative position\n *                  @param {number} options.tooltip.column.position.left position left\n *                  @param {number} options.tooltip.column.position.top position top\n *          @param {boolean} options.tooltip.grouped whether group tooltip or not\n *      @param {object} options.legend options of legend\n *          @param {string} options.legend.align legend align\n *      @param {string} options.theme theme name\n *      @param {string} options.libType graph library type\n * @returns {object} bar chart\n * @example\n * var container = document.getElementById('container-id'),\n *     data = {\n *       categories: ['cate1', 'cate2', 'cate3'],\n *       series: {\n *         column: [\n *           {\n *             name: 'Legend1',\n *             data: [20, 30, 50]]\n *           },\n *           {\n *             name: 'Legend2',\n *             data: [40, 40, 60]\n *           },\n *           {\n *             name: 'Legend3',\n *             data: [60, 50, 10]\n *           },\n *           {\n *             name: 'Legend4',\n *             data: [80, 10, 70]\n *           }\n *         },\n *         line: [\n *           {\n *             name: 'Legend5',\n *             data: [1, 2, 3]\n *           }\n *         ]\n *       }\n *     },\n *     options = {\n *       chart: {\n *         title: 'Combo Chart'\n *       },\n *       yAxis:[\n *         {\n *           title: 'Y Axis',\n *           chartType: 'line'\n *         },\n *         {\n *           title: 'Y Right Axis'\n *         }\n *       ],\n *       xAxis: {\n *         title: 'X Axis'\n *       },\n *       series: {\n *         hasDot: true\n *       }\n *     };\n * tui.chart.comboChart(container, data, options);\n */\ntui.chart.comboChart = function(container, data, options) {\n    options = options || {};\n    options.chartType = chartConst.CHART_TYPE_COMBO;\n    return _createChart(container, data, options);\n};\n\n/**\n * Pie chart creator.\n * @memberOf tui.chart\n * @param {HTMLElement} container chart container\n * @param {object} data chart data\n *      @param {array.&lt;array>} data.series series data\n * @param {object} options chart options\n *      @param {object} options.chart chart options\n *          @param {number} options.chart.width chart width\n *          @param {number} options.chart.height chart height\n *          @param {string} options.chart.title chart title\n *          @param {string} options.chart.format value format\n *      @param {object} options.series options of series\n *          @param {boolean} options.series.showLabel whether show label or not\n *          @param {boolean} options.series.hasSelection whether has selection or not\n *      @param {object} options.tooltip options of tooltip\n *          @param {string} options.tooltip.suffix suffix of tooltip\n *          @param {string} options.tooltip.template template of tooltip\n *          @param {string} options.tooltip.align tooltip align option\n *          @param {object} options.tooltip.position relative position\n *              @param {number} options.tooltip.position.left position left\n *              @param {number} options.tooltip.position.top position top\n *      @param {object} options.legend options of legend\n *          @param {string} options.legend.align legend align\n *      @param {string} options.theme theme name\n *      @param {string} options.libType graph library type\n * @returns {object} bar chart\n * @example\n * var container = document.getElementById('container-id'),\n *     data = {\n *       series: [\n *         {\n *           name: 'Legend1',\n *           data: 20\n *         },\n *         {\n *           name: 'Legend2',\n *           data: 40\n *         },\n *         {\n *           name: 'Legend3',\n *           data: 60\n *         },\n *         {\n *           name: 'Legend4',\n *           data: 80\n *         }\n *       ]\n *     },\n *     options = {\n *       chart: {\n *         title: 'Pie Chart'\n *       }\n *     };\n * tui.chart.pieChart(container, data, options);\n */\ntui.chart.pieChart = function(container, data, options) {\n    options = options || {};\n    options.chartType = chartConst.CHART_TYPE_PIE;\n    return _createChart(container, data, options);\n};\n\n/**\n * Register theme.\n * @memberOf tui.chart\n * @param {string} themeName theme name\n * @param {object} theme application chart theme\n *      @param {object} theme.chart chart theme\n *          @param {string} theme.chart.fontFamily font family of chart\n *          @param {string} theme.chart.background background of chart\n *      @param {object} theme.title chart theme\n *          @param {number} theme.title.fontSize font size of chart title\n *          @param {string} theme.title.fontFamily font family of chart title\n *          @param {string} theme.title.color font color of chart title\n *          @param {string} theme.title.background background of chart title\n *      @param {object} theme.yAxis theme of vertical axis\n *          @param {object} theme.yAxis.title theme of vertical axis title\n *              @param {number} theme.yAxis.title.fontSize font size of vertical axis title\n *              @param {string} theme.yAxis.title.fontFamily font family of vertical axis title\n *              @param {string} theme.yAxis.title.color font color of vertical axis title\n *          @param {object} theme.yAxis.label theme of vertical axis label\n *              @param {number} theme.yAxis.label.fontSize font size of vertical axis label\n *              @param {string} theme.yAxis.label.fontFamily font family of vertical axis label\n *              @param {string} theme.yAxis.label.color font color of vertical axis label\n *          @param {string} theme.yAxis.tickcolor color of vertical axis tick\n *      @param {object} theme.xAxis theme of horizontal axis\n *          @param {object} theme.xAxis.title theme of horizontal axis title\n *              @param {number} theme.xAxis.title.fontSize font size of horizontal axis title\n *              @param {string} theme.xAxis.title.fontFamily font family of horizontal axis title\n *              @param {string} theme.xAxis.title.color font color of horizontal axis title\n *          @param {object} theme.xAxis.label theme of horizontal axis label\n *              @param {number} theme.xAxis.label.fontSize font size of horizontal axis label\n *              @param {string} theme.xAxis.label.fontFamily font family of horizontal axis label\n *              @param {string} theme.xAxis.label.color font color of horizontal axis label\n *          @param {string} theme.xAxis.tickcolor color of horizontal axis tick\n *      @param {object} theme.plot plot theme\n *          @param {string} theme.plot.lineColor plot line color\n *          @param {string} theme.plot.background plot background\n *      @param {object} theme.series series theme\n *          @param {array.&lt;string>} theme.series.colors series colors\n *          @param {string} theme.series.borderColor series border color\n *      @param {object} theme.legend legend theme\n *          @param {object} theme.legend.label theme of legend label\n *              @param {number} theme.legend.label.fontSize font size of legend label\n *              @param {string} theme.legend.label.fontFamily font family of legend label\n *              @param {string} theme.legend.label.color font color of legend label\n * @example\n * var theme = {\n *   yAxis: {\n *     tickColor: '#ccbd9a',\n *       title: {\n *         color: '#333333'\n *       },\n *       label: {\n *         color: '#6f491d'\n *       }\n *     },\n *     xAxis: {\n *       tickColor: '#ccbd9a',\n *       title: {\n *         color: '#333333'\n *       },\n *       label: {\n *         color: '#6f491d'\n *       }\n *     },\n *     plot: {\n *       lineColor: '#e5dbc4',\n *       background: '#f6f1e5'\n *     },\n *     series: {\n *       colors: ['#40abb4', '#e78a31', '#c1c452', '#795224', '#f5f5f5'],\n *       borderColor: '#8e6535',\n *       selectionColor: '#cccccc',\n *     },\n *     legend: {\n *       label: {\n *         color: '#6f491d'\n *       }\n *     }\n *   };\n * chart.registerTheme('newTheme', theme);\n */\ntui.chart.registerTheme = function(themeName, theme) {\n    themeFactory.register(themeName, theme);\n};\n\n/**\n * Register graph plugin.\n * @memberOf tui.chart\n * @param {string} libType type of graph library\n * @param {object} plugin plugin to control library\n * @example\n * var pluginRaphael = {\n *   bar: function() {} // Render class\n * };\n * tui.chart.registerPlugin('raphael', pluginRaphael);\n */\ntui.chart.registerPlugin = function(libType, plugin) {\n    pluginFactory.register(libType, plugin);\n};\n</code></pre>\n        </article>\n    </section>\n\n\n\n</div>\n\n"