tui.util.defineNamespace("fedoc.content", {});
fedoc.content["helpers_eventListener.js.html"] = "      <div id=\"main\" class=\"main\">\n\n\n\n    \n    <section>\n        <article>\n            <pre class=\"prettyprint source linenums\"><code>/**\n * @fileoverview Event listener.\n * @author NHN Ent.\n *         FE Development Team &lt;dl_javascript@nhnent.com>\n */\n\n'use strict';\n\n/**\n * Event listener.\n * @module eventListener\n */\nvar eventListener = {\n    /**\n     * Event listener for IE.\n     * @memberOf module:eventListener\n     * @param {string} eventName event name\n     * @param {HTMLElement} el target element\n     * @param {function} callback callback function\n     * @param {?object} context context for callback\n     * @private\n     */\n    _attachEvent: function(eventName, el, callback, context) {\n        if (context) {\n            callback = tui.util.bind(callback, context);\n        }\n        el.attachEvent('on' + eventName, callback);\n    },\n\n    /**\n     * Event listener for other browsers.\n     * @memberOf module:eventListener\n     * @param {string} eventName event name\n     * @param {HTMLElement} el target element\n     * @param {function} callback callback function\n     * @param {?object} context context for callback\n     * @private\n     */\n    _addEventListener: function(eventName, el, callback, context) {\n        if (context) {\n            callback = tui.util.bind(callback, context);\n        }\n\n        el.addEventListener(eventName, callback);\n    },\n    /**\n     * Bind event function.\n     * @memberOf module:eventListener\n     * @param {string} eventName event name\n     * @param {HTMLElement} target target element\n     * @param {function} callback callback function\n     * @param {?object} context context for callback\n     */\n    bindEvent: function(eventName, target, callback, context) {\n        var bindEvent;\n        if ('addEventListener' in target) {\n            bindEvent = this._addEventListener;\n        } else if ('attachEvent' in target) {\n            bindEvent = this._attachEvent;\n        }\n        this.bindEvent = bindEvent;\n\n        bindEvent(eventName, target, callback, context);\n    }\n};\n\nmodule.exports = eventListener;\n</code></pre>\n        </article>\n    </section>\n\n\n\n</div>\n\n"