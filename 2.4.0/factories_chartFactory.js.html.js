tui.util.defineNamespace("fedoc.content", {});
fedoc.content["factories_chartFactory.js.html"] = "      <div id=\"main\" class=\"main\">\n\n\n\n    \n    <section>\n        <article>\n            <pre class=\"prettyprint source linenums\"><code>/**\n * @fileoverview  Chart factory play role register chart.\n *                Also, you can get chart from this factory.\n * @author NHN Ent.\n *         FE Development Lab &lt;dl_javascript@nhnent.com>\n */\n\n'use strict';\nvar chartConst = require('../const');\nvar rawDataHandler = require('../models/data/rawDataHandler');\nvar predicate = require('../helpers/predicate');\n\nvar charts = {};\nvar factory = {\n    /**\n     * Find key for getting chart.\n     * @param {string} chartType - type of chart\n     * @param {{seriesAlias: ?object, series: object.&lt;string, Array>}} rawData - raw data\n     * @returns {string}\n     * @private\n     */\n    _findKey: function(chartType, rawData) {\n        var key = null;\n        var chartTypeMap;\n\n        if (predicate.isComboChart(chartType)) {\n            chartTypeMap = rawDataHandler.getChartTypeMap(rawData);\n\n            if (chartTypeMap[chartConst.CHART_TYPE_COLUMN] &amp;&amp; chartTypeMap[chartConst.CHART_TYPE_LINE]) {\n                key = chartConst.CHART_TYPE_COLUMN_LINE_COMBO;\n            } else if (chartTypeMap[chartConst.CHART_TYPE_AREA] &amp;&amp; chartTypeMap[chartConst.CHART_TYPE_LINE]) {\n                key = chartConst.CHART_TYPE_LINE_AREA_COMBO;\n            } else if (chartTypeMap[chartConst.CHART_TYPE_PIE]) {\n                key = chartConst.CHART_TYPE_PIE_DONUT_COMBO;\n            }\n        } else {\n            key = chartType;\n        }\n\n        return key;\n    },\n\n    /**\n     * Get chart instance.\n     * @param {string} chartType chart type\n     * @param {object} rawData chart data\n     * @param {object} theme chart options\n     * @param {object} options chart options\n     * @returns {object} chart instance;\n     */\n    get: function(chartType, rawData, theme, options) {\n        var key = this._findKey(chartType, rawData);\n        var Chart = charts[key];\n        var chart;\n\n        if (!Chart) {\n            throw new Error('Not exist ' + chartType + ' chart.');\n        }\n\n        chart = new Chart(rawData, theme, options);\n\n        return chart;\n    },\n\n    /**\n     * Register chart.\n     * @param {string} chartType char type\n     * @param {class} ChartClass chart class\n     */\n    register: function(chartType, ChartClass) {\n        charts[chartType] = ChartClass;\n    }\n};\n\nmodule.exports = factory;\n</code></pre>\n        </article>\n    </section>\n\n\n\n</div>\n\n"