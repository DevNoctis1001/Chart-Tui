tui.util.defineNamespace("fedoc.content", {});
fedoc.content["charts_columnChart.js.html"] = "      <div id=\"main\" class=\"main\">\n\n\n\n    \n    <section>\n        <article>\n            <pre class=\"prettyprint source linenums\"><code>/**\n * @fileoverview Column chart.\n * @author NHN Ent.\n *         FE Development Lab &lt;dl_javascript@nhnent.com>\n */\n\n'use strict';\n\nvar ChartBase = require('./chartBase');\nvar chartConst = require('../const');\nvar axisTypeMixer = require('./axisTypeMixer');\nvar rawDataHandler = require('../models/data/rawDataHandler');\nvar Series = require('../components/series/columnChartSeries');\n\nvar ColumnChart = tui.util.defineClass(ChartBase, /** @lends ColumnChart.prototype */ {\n    /**\n     * className\n     * @type {string}\n     */\n    className: 'tui-column-chart',\n    /**\n     * Column chart.\n     * @constructs ColumnChart\n     * @extends ChartBase\n     * @mixes axisTypeMixer\n     * @mixes verticalTypeMixer\n     * @param {Array.&lt;Array>} rawData raw data\n     * @param {object} theme chart theme\n     * @param {object} options chart options\n     */\n    init: function(rawData, theme, options) {\n        rawDataHandler.updateRawSeriesDataByOptions(rawData, options.series);\n        this._updateOptionsRelatedDiverging(options);\n\n        ChartBase.call(this, {\n            rawData: rawData,\n            theme: theme,\n            options: options,\n            hasAxes: true,\n            isVertical: true\n        });\n    },\n\n    /**\n     * Update options related diverging option.\n     * @param {object} options - options\n     * @private\n     */\n    _updateOptionsRelatedDiverging: function(options) {\n        options.series = options.series || {};\n\n        if (options.series.diverging) {\n            options.series.stackType = options.series.stackType || chartConst.NORMAL_STACK_TYPE;\n        }\n    },\n\n    /**\n     * Add components\n     * @private\n     */\n    _addComponents: function() {\n        this._addComponentsForAxisType({\n            axis: [\n                {\n                    name: 'yAxis',\n                    isVertical: true\n                },\n                {\n                    name: 'xAxis'\n                }\n            ],\n            series: [\n                {\n                    name: 'columnSeries',\n                    SeriesClass: Series,\n                    data: {\n                        allowNegativeTooltip: true\n                    }\n                }\n            ],\n            plot: true\n        });\n    },\n\n    /**\n     * Get scale option.\n     * @returns {{yAxis: boolean}}\n     * @private\n     * @override\n     */\n    _getScaleOption: function() {\n        return {\n            yAxis: true\n        };\n    }\n});\n\ntui.util.extend(ColumnChart.prototype, axisTypeMixer);\n\nmodule.exports = ColumnChart;\n</code></pre>\n        </article>\n    </section>\n\n\n\n</div>\n\n"