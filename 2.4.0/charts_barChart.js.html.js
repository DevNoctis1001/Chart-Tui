tui.util.defineNamespace("fedoc.content", {});
fedoc.content["charts_barChart.js.html"] = "      <div id=\"main\" class=\"main\">\n\n\n\n    \n    <section>\n        <article>\n            <pre class=\"prettyprint source linenums\"><code>/**\n * @fileoverview Bar chart.\n * @author NHN Ent.\n *         FE Development Lab &lt;dl_javascript@nhnent.com>\n */\n\n'use strict';\n\nvar ChartBase = require('./chartBase');\nvar chartConst = require('../const');\nvar axisTypeMixer = require('./axisTypeMixer');\nvar rawDataHandler = require('../models/data/rawDataHandler');\nvar predicate = require('../helpers/predicate');\nvar Series = require('../components/series/barChartSeries');\n\nvar BarChart = tui.util.defineClass(ChartBase, /** @lends BarChart.prototype */ {\n    /**\n     * className\n     * @type {string}\n     */\n    className: 'tui-bar-chart',\n    /**\n     * Bar chart.\n     * @constructs BarChart\n     * @extends ChartBase\n     * @mixes axisTypeMixer\n     * @param {Array.&lt;Array>} rawData raw data\n     * @param {object} theme chart theme\n     * @param {object} options chart options\n     */\n    init: function(rawData, theme, options) {\n        rawDataHandler.updateRawSeriesDataByOptions(rawData, options.series);\n        this._updateOptionsRelatedDiverging(options);\n\n        ChartBase.call(this, {\n            rawData: rawData,\n            theme: theme,\n            options: options,\n            hasAxes: true\n        });\n    },\n\n    /**\n     * Update options related diverging option.\n     * @param {object} options - options\n     * @private\n     */\n    _updateOptionsRelatedDiverging: function(options) {\n        var isCenter;\n\n        options.series = options.series || {};\n\n        /**\n         * Whether has right y axis or not.\n         * @type {boolean}\n         */\n        this.hasRightYAxis = false;\n\n        if (options.series.diverging) {\n            options.yAxis = options.yAxis || {};\n            options.xAxis = options.xAxis || {};\n            options.plot = options.plot || {};\n\n\n            options.series.stackType = options.series.stackType || chartConst.NORMAL_STACK_TYPE;\n            this.hasRightYAxis = tui.util.isArray(options.yAxis) &amp;&amp; options.yAxis.length > 1;\n\n            isCenter = predicate.isYAxisAlignCenter(this.hasRightYAxis, options.yAxis.align);\n\n            options.yAxis.isCenter = isCenter;\n            options.xAxis.divided = isCenter;\n            options.series.divided = isCenter;\n            options.plot.divided = isCenter;\n        }\n    },\n\n    /**\n     * Add components\n     * @private\n     */\n    _addComponents: function() {\n        var axes = [\n            {\n                name: 'yAxis',\n                isVertical: true\n            },\n            {\n                name: 'xAxis'\n            }\n        ];\n\n        if (this.hasRightYAxis) {\n            axes.push({\n                name: 'rightYAxis',\n                isVertical: true\n            });\n        }\n        this._addComponentsForAxisType({\n            axis: axes,\n            series: [\n                {\n                    name: 'barSeries',\n                    SeriesClass: Series\n                }\n            ],\n            plot: true\n        });\n    },\n\n    /**\n     * Get scale option.\n     * @returns {{xAxis: boolean}}\n     * @private\n     * @override\n     */\n    _getScaleOption: function() {\n        return {\n            xAxis: true\n        };\n    },\n\n    /**\n     * On change selected legend.\n     * @param {Array.&lt;?boolean> | {line: ?Array.&lt;boolean>, column: ?Array.&lt;boolean>}} checkedLegends checked legends\n     */\n    onChangeCheckedLegends: function(checkedLegends) {\n        var boundParams;\n\n        if (this.hasRightYAxis) {\n            boundParams = {\n                optionChartTypes: ['bar', 'bar']\n            };\n        }\n\n        ChartBase.prototype.onChangeCheckedLegends.call(this, checkedLegends, null, boundParams);\n    }\n});\n\ntui.util.extend(BarChart.prototype, axisTypeMixer);\n\nmodule.exports = BarChart;\n</code></pre>\n        </article>\n    </section>\n\n\n\n</div>\n\n"