tui.util.defineNamespace("fedoc.content", {});
fedoc.content["charts_lineTypeMixer.js.html"] = "      <div id=\"main\" class=\"main\">\n\n\n\n    \n    <section>\n        <article>\n            <pre class=\"prettyprint source linenums\"><code>/**\n * @fileoverview lineTypeMixer is mixer of line type chart(line, area).\n * @author NHN Ent.\n *         FE Development Lab &lt;dl_javascript@nhnent.com>\n */\n\n'use strict';\n\nvar AreaTypeCustomEvent = require('../components/customEvents//areaTypeCustomEvent');\n\n/**\n * lineTypeMixer is mixer of line type chart(line, area).\n * @mixin\n */\nvar lineTypeMixer = {\n    /**\n     * Get scale option.\n     * @returns {{xAxis: ?{valueType:string}, yAxis: ?(boolean|{valueType:string})}}\n     * @private\n     * @override\n     */\n    _getScaleOption: function() {\n        var scaleOption = {};\n\n        if (this.dataProcessor.isCoordinateType()) {\n            scaleOption.xAxis = {\n                valueType: 'x'\n            };\n            scaleOption.yAxis = {\n                valueType: 'y'\n            };\n        } else {\n            scaleOption.yAxis = true;\n        }\n\n        return scaleOption;\n    },\n\n    /**\n     * Add custom event component for normal tooltip.\n     * @private\n     */\n    _addCustomEventComponentForNormalTooltip: function() {\n        var seriesOptions = this.options.series;\n\n        this.componentManager.register('customEvent', AreaTypeCustomEvent, {\n            chartType: this.chartType,\n            isVertical: this.isVertical,\n            zoomable: seriesOptions.zoomable,\n            allowSelect: seriesOptions.allowSelect\n        });\n    },\n\n    /**\n     * Add components\n     * @param {string} chartType chart type\n     * @private\n     */\n    _addComponents: function() {\n        if (this.dataProcessor.isCoordinateType()) {\n            delete this.options.xAxis.tickInterval;\n            this.options.tooltip.grouped = false;\n            this.options.series.shifting = false;\n        }\n\n        this._addComponentsForAxisType({\n            axis: [\n                {\n                    name: 'yAxis',\n                    seriesName: this.chartType,\n                    isVertical: true\n                },\n                {\n                    name: 'xAxis'\n                }\n            ],\n            series: [\n                {\n                    name: this.chartType + 'Series',\n                    SeriesClass: this.Series\n                }\n            ],\n            plot: true\n        });\n    },\n\n    /**\n     * Add plot line.\n     * @param {{index: number, color: string, id: string}} data - data\n     * @override\n     * @api\n     */\n    addPlotLine: function(data) {\n        this.componentManager.get('plot').addPlotLine(data);\n    },\n\n    /**\n     * Add plot band.\n     * @param {{range: Array.&lt;number>, color: string, id: string}} data - data\n     * @override\n     * @api\n     */\n    addPlotBand: function(data) {\n        this.componentManager.get('plot').addPlotBand(data);\n    },\n\n    /**\n     * Remove plot line.\n     * @param {string} id - line id\n     * @override\n     * @api\n     */\n    removePlotLine: function(id) {\n        this.componentManager.get('plot').removePlotLine(id);\n    },\n\n    /**\n     * Remove plot band.\n     * @param {string} id - band id\n     * @override\n     * @api\n     */\n    removePlotBand: function(id) {\n        this.componentManager.get('plot').removePlotBand(id);\n    }\n};\n\nmodule.exports = lineTypeMixer;\n</code></pre>\n        </article>\n    </section>\n\n\n\n</div>\n\n"