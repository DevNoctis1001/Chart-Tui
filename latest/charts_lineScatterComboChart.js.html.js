tui.util.defineNamespace("fedoc.content", {});
fedoc.content["charts_lineScatterComboChart.js.html"] = "      <div id=\"main\" class=\"main\">\n\n\n\n    \n    <section>\n        <article>\n            <pre class=\"prettyprint source linenums\"><code>/**\n * @fileoverview Line and Scatter Combo chart.\n * @author NHN Ent.\n *         FE Development Lab &lt;dl_javascript@nhnent.com>\n */\n\n'use strict';\n\nvar ChartBase = require('./chartBase');\nvar axisTypeMixer = require('./axisTypeMixer');\nvar comboTypeMixer = require('./comboTypeMixer');\n\nvar LineSeries = require('../components/series/lineChartSeries');\nvar ScatterSeries = require('../components/series/scatterChartSeries');\n\nvar LineScatterComboChart = tui.util.defineClass(ChartBase, /** @lends LineScatterComboChart.prototype */ {\n    /**\n     * Column and Line Combo chart.\n     * @constructs LineScatterComboChart\n     * @extends ChartBase\n     * @param {Array.&lt;Array>} rawData raw data\n     * @param {object} theme chart theme\n     * @param {object} options chart options\n     */\n    init: function(rawData, theme, options) {\n        //\n        //var chartTypesMap = this._makeChartTypesMap(rawData.series, options.yAxis, options.chartType);\n        /**\n         * chart types map\n         * @type {Object}\n         */\n        this.chartTypes = ['line', 'scatter'];\n\n        /**\n         * series names\n         * @type {Object|Array.&lt;T>}\n         */\n        this.seriesNames = ['line', 'scatter'];\n\n        ChartBase.call(this, {\n            rawData: rawData,\n            theme: theme,\n            options: options,\n            hasAxes: true,\n            isVertical: false\n        });\n    },\n\n    _addComponents: function() {\n        this._addPlotComponent(this.options.xAxis.type);\n        this._addAxisComponents([\n            {\n                name: 'yAxis',\n                isVertical: true\n            },\n            {\n                name: 'xAxis'\n            }\n        ], false);\n        this._addLegendComponent({}, this.seriesNames);\n        this._addSeriesComponents([{\n            name: 'lineSeries',\n            SeriesClass: LineSeries,\n            data: {\n                allowNegativeTooltip: true,\n                chartType: 'line',\n                seriesName: 'line',\n                options: {}\n            }\n        },/*asdasdasdScatter부터 완료까지 진행해야됩니다 책임님*/], this.options);\n    },\n\n    _getScaleOption: function() {\n        return {\n            yAxis: {\n                valueType: 'y',\n                additionalOptions: {\n                    isSingleYAxis: true\n                }\n            },\n            xAxis: {\n                valueType: 'x'\n            }\n        };\n    }\n});\n\ntui.util.extend(LineScatterComboChart.prototype, axisTypeMixer, comboTypeMixer);\n\nmodule.exports = LineScatterComboChart;\n</code></pre>\n        </article>\n    </section>\n\n\n\n</div>\n\n"