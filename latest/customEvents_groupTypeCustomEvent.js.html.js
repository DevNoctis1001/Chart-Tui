ne.util.defineNamespace("fedoc.content", {});
fedoc.content["customEvents_groupTypeCustomEvent.js.html"] = "      <div id=\"main\" class=\"main\">\n\n\n\n    \n    <section>\n        <article>\n            <pre class=\"prettyprint source linenums\"><code>/**\n * @fileoverview GroupTypeCustomEvent is event handle layer for grouped toolip option.\n * @author NHN Ent.\n *         FE Development Team &lt;dl_javascript@nhnent.com>\n */\n\n'use strict';\n\nvar CustomEventBase = require('./customEventBase'),\n    chartConst = require('../const');\n\nvar GroupTypeCustomEvent = tui.util.defineClass(CustomEventBase, /** @lends GroupTypeCustomEvent.prototype */ {\n    /**\n     * GroupTypeCustomEvent is event handle layer for grouped toolip option.\n     * @constructs GroupTypeCustomEvent\n     * @extends CustomEventBase\n     */\n    init: function() {\n        CustomEventBase.apply(this, arguments);\n    },\n\n    /**\n     * Get layer position.\n     * @param {MouseEvent} e mouse event object\n     * @param {{top: number, right: number, bottom: number, left: number}} bound bound\n     * @param {boolean} isVertical whether vertical or not\n     * @returns {number} layer position (left or top)\n     * @private\n     */\n    _getLayerPositionValue: function(e, bound, isVertical) {\n        var layerPosition;\n        if (isVertical) {\n            layerPosition = e.clientX - chartConst.SERIES_EXPAND_SIZE - bound.left;\n        } else {\n            layerPosition = e.clientY - bound.top;\n        }\n        return layerPosition;\n    },\n\n    /**\n     * On mousemove.\n     * @param {MouseEvent} e mouse event object\n     * @override\n     */\n    onMousemove: function(e) {\n        var elTarget = e.target || e.srcElement,\n            bound = elTarget.getBoundingClientRect(),\n            layerPositionValue = this._getLayerPositionValue(e, bound, this.isVertical),\n            index = this.tickBaseDataModel.findIndex(layerPositionValue),\n            prevIndex = this.prevIndex,\n            sizeType = this.isVertical ? 'height' : 'width';\n\n        if (index === -1) {\n            this.onMouseout();\n            return;\n        }\n\n        if (prevIndex === index) {\n            return;\n        }\n\n        this.prevIndex = index;\n\n        this.fire('showGroupTooltip', {\n            index: index,\n            range: this.tickBaseDataModel.makeRange(index, this.chartType),\n            size: this.bound.dimension[sizeType],\n            isVertical: this.isVertical\n        });\n    },\n\n    /**\n     * On mouseout.\n     * @param {MouseEvent} e mouse event object\n     * @override\n     */\n    onMouseout: function() {\n        if (!tui.util.isUndefined(this.prevIndex)) {\n            this.fire('hideGroupTooltip', this.prevIndex);\n            delete this.prevIndex;\n        }\n    }\n});\n\ntui.util.CustomEvents.mixin(GroupTypeCustomEvent);\n\nmodule.exports = GroupTypeCustomEvent;\n</code></pre>\n        </article>\n    </section>\n\n\n\n</div>\n\n"