tui.util.defineNamespace("fedoc.content", {});
fedoc.content["charts_addingDynamicDataMixer.js.html"] = "      <div id=\"main\" class=\"main\">\n\n\n\n    \n    <section>\n        <article>\n            <pre class=\"prettyprint source linenums\"><code>'use strict';\n\nvar chartConst = require('../const');\n\n/**\n * addingDynamicData is mixer for adding dynamic data.\n * @mixin\n */\nvar addingDynamicDataMixer = {\n    /**\n     * Initialize for adding data.\n     * @private\n     */\n    _initForAddingData: function() {\n        /**\n         * whether lookupping or not\n         * @type {boolean}\n         */\n        this.lookupping = false;\n\n        /**\n         * whether paused or not\n         * @type {boolean}\n         */\n        this.paused = false;\n\n        /**\n         * rendering delay timer id\n         * @type {null}\n         */\n        this.rerenderingDelayTimerId = null;\n\n        /**\n         * added data count\n         * @type {number}\n         */\n        this.addedDataCount = 0;\n    },\n\n    /**\n     * Animate for adding data.\n     * @private\n     */\n    _animateForAddingData: function() {\n        var self = this;\n        var boundsMaker = this.boundsMaker;\n        var shiftingOption = !!tui.util.pick(this.options.series, 'shifting');\n        var beforeAxesData = boundsMaker.getAxesData();\n        var beforeSizeRatio = beforeAxesData.xAxis.sizeRatio || 1;\n\n        this.addedDataCount += 1;\n        this.axisScaleMakerMap = null;\n        boundsMaker.initBoundsData();\n\n        this._render(function() {\n            var xAxisWidth = boundsMaker.getDimension('xAxis').width * beforeSizeRatio;\n            var tickSize = (xAxisWidth / (self.dataProcessor.getCategoryCount(false) - 1));\n\n            self._renderComponents({\n                tickSize: tickSize + chartConst.OVERLAPPING_WIDTH,\n                shifting: shiftingOption\n            }, 'animateForAddingData');\n        }, beforeAxesData);\n\n        if (shiftingOption) {\n            this.dataProcessor.shiftData();\n        }\n    },\n\n    /**\n     * Rerender for adding data.\n     * @private\n     */\n    _rerenderForAddingData: function() {\n        var self = this;\n\n        if (tui.util.pick(this.options.series, 'shifting')) {\n            this.boundsMaker.initBoundsData();\n        }\n\n        this._render(function(renderingData) {\n            renderingData.animatable = false;\n            self._renderComponents(renderingData, 'rerender');\n        });\n    },\n\n    /**\n     * Check for added data.\n     * @private\n     */\n    _checkForAddedData: function() {\n        var self = this;\n        var added = this.dataProcessor.addDataFromDynamicData();\n\n        if (!added) {\n            this.lookupping = false;\n            return;\n        }\n\n        if (this.paused) {\n            return;\n        }\n\n        this._animateForAddingData();\n        this.rerenderingDelayTimerId = setTimeout(function() {\n            self.rerenderingDelayTimerId = null;\n            self._rerenderForAddingData();\n            self._checkForAddedData();\n        }, 400);\n    },\n\n    /**\n     * Pause animation for adding data.\n     * @private\n     */\n    _pauseAnimationForAddingData: function() {\n        this.paused = true;\n        this._initForAutoTickInterval();\n\n        if (this.rerenderingDelayTimerId) {\n            clearTimeout(this.rerenderingDelayTimerId);\n            this.rerenderingDelayTimerId = null;\n\n            if (tui.util.pick(this.options.series, 'shifting')) {\n                this.dataProcessor.shiftData();\n            }\n        }\n    },\n\n    /**\n     * Restart animation for adding data.\n     * @private\n     */\n    _restartAnimationForAddingData: function() {\n        this.paused = false;\n        this.lookupping = false;\n        this._startLookup();\n    },\n\n    /**\n     * Start lookup.\n     * @private\n     */\n    _startLookup: function() {\n        if (this.lookupping) {\n            return;\n        }\n\n        this.lookupping = true;\n\n        this._checkForAddedData();\n    },\n\n    /**\n     * Add data.\n     * @param {string} category - category\n     * @param {Array} values - values\n     */\n    addData: function(category, values) {\n        this.dataProcessor.addDynamicData(category, values);\n        this._startLookup();\n    },\n\n    /**\n     * Mix in.\n     * @param {function} func - target function\n     * @ignore\n     */\n    mixin: function(func) {\n        tui.util.extend(func.prototype, this);\n    }\n};\n\nmodule.exports = addingDynamicDataMixer;\n</code></pre>\n        </article>\n    </section>\n\n\n\n</div>\n\n"