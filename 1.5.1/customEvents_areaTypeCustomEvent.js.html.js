tui.util.defineNamespace("fedoc.content", {});
fedoc.content["customEvents_areaTypeCustomEvent.js.html"] = "      <div id=\"main\" class=\"main\">\n\n\n\n    \n    <section>\n        <article>\n            <pre class=\"prettyprint source linenums\"><code>/**\n * @fileoverview AreaTypeCustomEvent is event handle layer for line type chart.\n * @author NHN Ent.\n *         FE Development Team &lt;dl_javascript@nhnent.com>\n */\n\n'use strict';\n\nvar CustomEventBase = require('./customEventBase'),\n    AreaTypeDataModel = require('./areaTypeDataModel'),\n    chartConst = require('../const');\n\nvar AreaTypeCustomEvent = tui.util.defineClass(CustomEventBase, /** @lends AreaTypeCustomEvent.prototype */ {\n    /**\n     * AreaTypeCustomEvent is custom event for line type chart.\n     * @param {object} params parameters\n     * @constructs AreaTypeCustomEvent\n     * @extends CustomEventBase\n     */\n    init: function(params) {\n        CustomEventBase.call(this, params);\n\n        /**\n         * previous found data\n         * @type {null | object}\n         */\n        this.prevFoundData = null;\n    },\n\n    /**\n     * Initialize data of custom event\n     * @param {Array.&lt;object>} seriesInfos series infos\n     * @override\n     */\n    initCustomEventData: function(seriesInfos) {\n        var seriesInfo = seriesInfos[0];\n        this.dataModel = new AreaTypeDataModel(seriesInfo);\n        CustomEventBase.prototype.initCustomEventData.call(this, seriesInfos);\n    },\n\n    /**\n     * On mousemove.\n     * @param {MouseEvent} e mouse event object\n     * @private\n     * @override\n     */\n    _onMousemove: function(e) {\n        var elTarget = e.target || e.srcElement,\n            bound = elTarget.getBoundingClientRect(),\n            layerX = e.clientX - chartConst.SERIES_EXPAND_SIZE - bound.left,\n            layerY = e.clientY - bound.top,\n            groupIndex = this.tickBaseDataModel.findIndex(layerX),\n            foundData = this.dataModel.findData(groupIndex, layerY);\n\n        if (!this._isChanged(this.prevFoundData, foundData)) {\n            return;\n        }\n\n        if (foundData) {\n            this.fire('showTooltip', foundData);\n        } else if (this.prevFoundData) {\n            this.fire('hideTooltip', this.prevFoundData);\n        }\n        this.prevFoundData = foundData;\n    },\n\n    /**\n     * On mouseout.\n     * @private\n     * @override\n     */\n    _onMouseout: function() {\n        if (this.prevFoundData) {\n            this.fire('hideTooltip', this.prevFoundData);\n            this.prevFoundData = null;\n        }\n    }\n});\n\nmodule.exports = AreaTypeCustomEvent;\n</code></pre>\n        </article>\n    </section>\n\n\n\n</div>\n\n"