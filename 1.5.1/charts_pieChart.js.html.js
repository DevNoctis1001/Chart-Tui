tui.util.defineNamespace("fedoc.content", {});
fedoc.content["charts_pieChart.js.html"] = "      <div id=\"main\" class=\"main\">\n\n\n\n    \n    <section>\n        <article>\n            <pre class=\"prettyprint source linenums\"><code>/**\n * @fileoverview Pie chart.\n * @author NHN Ent.\n *         FE Development Team &lt;dl_javascript@nhnent.com>\n */\n\n'use strict';\n\nvar ChartBase = require('./chartBase'),\n    chartConst = require('../const'),\n    predicate = require('../helpers/predicate'),\n    Legend = require('../legends/legend'),\n    Tooltip = require('../tooltips/tooltip'),\n    Series = require('../series/pieChartSeries'),\n    PieChartCustomEvent = require('../customEvents/pieChartCustomEvent');\n\nvar PieChart = tui.util.defineClass(ChartBase, /** @lends PieChart.prototype */ {\n    /**\n     * Column chart.\n     * @constructs PieChart\n     * @extends ChartBase\n     * @param {Array.&lt;Array>} rawData raw data\n     * @param {object} theme chart theme\n     * @param {object} options chart options\n     */\n    init: function(rawData, theme, options) {\n        this.className = 'tui-pie-chart';\n\n        options.tooltip = options.tooltip || {};\n\n        if (!options.tooltip.align) {\n            options.tooltip.align = chartConst.TOOLTIP_DEFAULT_ALIGN_OPTION;\n        }\n\n        ChartBase.call(this, {\n            rawData: rawData,\n            theme: theme,\n            options: options\n        });\n\n        this._addComponents(theme.chart.background, options);\n    },\n\n    /**\n     * Add components\n     * @param {object} chartBackground chart background\n     * @param {object} options chart options\n     * @private\n     */\n    _addComponents: function(chartBackground, options) {\n        var legendAlign, isPieLegendType;\n        options.legend = options.legend || {};\n        legendAlign = options.legend &amp;&amp; options.legend.align;\n        isPieLegendType = predicate.isPieLegendAlign(legendAlign);\n\n        if (!isPieLegendType &amp;&amp; !options.legend.hidden) {\n            this.componentManager.register('legend', Legend, {\n                chartType: options.chartType,\n                userEvent: this.userEvent\n            });\n        }\n\n        this.componentManager.register('tooltip', Tooltip, this._makeTooltipData());\n\n        this.componentManager.register('pieSeries', Series, {\n            libType: options.libType,\n            chartType: options.chartType,\n            componentType: 'series',\n            chartBackground: chartBackground,\n            userEvent: this.userEvent,\n            legendAlign: isPieLegendType &amp;&amp; !options.legend.hidden ? legendAlign : null\n        });\n    },\n\n    /**\n     * Add custom event component.\n     * @private\n     */\n    _addCustomEventComponent: function() {\n        this.componentManager.register('customEvent', PieChartCustomEvent, {\n            chartType: this.chartType\n        });\n    },\n\n    /**\n     * Add data ratios.\n     * @private\n     * @override\n     */\n    _addDataRatios: function() {\n        this.dataProcessor.addDataRatiosOfPieChart();\n    },\n\n    /**\n     * Attach custom evnet.\n     * @private\n     * @override\n     */\n    _attachCustomEvent: function() {\n        var customEvent, tooltip, pieSeries;\n\n        ChartBase.prototype._attachCustomEvent.call(this);\n\n        customEvent = this.componentManager.get('customEvent');\n        tooltip = this.componentManager.get('tooltip');\n        pieSeries = this.componentManager.get('pieSeries');\n\n        customEvent.on({\n            clickPieSeries: pieSeries.onClickSeries,\n            movePieSeries: pieSeries.onMoveSeries\n        }, pieSeries);\n\n        pieSeries.on({\n            showTooltip: tooltip.onShow,\n            hideTooltip: tooltip.onHide,\n            showTooltipContainer: tooltip.onShowTooltipContainer,\n            hideTooltipContainer: tooltip.onHideTooltipContainer\n        }, tooltip);\n    }\n});\n\nmodule.exports = PieChart;\n</code></pre>\n        </article>\n    </section>\n\n\n\n</div>\n\n"