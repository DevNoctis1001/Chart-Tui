tui.util.defineNamespace("fedoc.content", {});
fedoc.content["series_areaChartSeries.js.html"] = "      <div id=\"main\" class=\"main\">\n\n\n\n    \n    <section>\n        <article>\n            <pre class=\"prettyprint source linenums\"><code>/**\n * @fileoverview Area chart series component.\n * @author NHN Ent.\n *         FE Development Team &lt;dl_javascript@nhnent.com>\n */\n\n'use strict';\n\nvar Series = require('./series');\nvar LineTypeSeriesBase = require('./lineTypeSeriesBase');\nvar chartConst = require('../const');\nvar predicate = require('../helpers/predicate');\n\nvar AreaChartSeries = tui.util.defineClass(Series, /** @lends AreaChartSeries.prototype */ {\n    /**\n     * Area chart series component.\n     * @constructs AreaChartSeries\n     * @extends Series\n     * @mixes LineTypeSeriesBase\n     * @param {object} params parameters\n     *      @param {object} params.model series model\n     *      @param {object} params.options series options\n     *      @param {object} params.theme series theme\n     */\n    init: function() {\n        Series.apply(this, arguments);\n    },\n\n    /**\n     * Make position top of zero point.\n     * @param {{height: number}} dimension dimension\n     * @returns {number} position top\n     * @private\n     */\n    _makePositionTopOfZeroPoint: function() {\n        var dimension = this.boundsMaker.getDimension('series'),\n            limit = this.data.limit,\n            limitDistance = this._getLimitDistanceFromZeroPoint(dimension.height, limit),\n            top = limitDistance.toMax;\n\n        if (limit.min >= 0 &amp;&amp; !top) {\n            top = dimension.height;\n        }\n\n        return top + chartConst.SERIES_EXPAND_SIZE;\n    },\n\n    /**\n     * Make stackType positions.\n     * @param {Array.&lt;Array.&lt;{left: number, top: number}>>} groupPositions group positions\n     * @returns {Array.&lt;Array.&lt;{left: number, top: number, startTop: number}>>} stackType positions\n     * @private\n     */\n    _makeStackedPositions: function(groupPositions) {\n        var height = this.boundsMaker.getDimension('series').height + chartConst.SERIES_EXPAND_SIZE,\n            firstStartTop = this._makePositionTopOfZeroPoint(),\n            prevPositionTops = [];\n\n        return tui.util.map(groupPositions, function(positions) {\n            return tui.util.map(positions, function(position, index) {\n                var prevTop = prevPositionTops[index] || firstStartTop;\n                var stackedHeight = height - position.top;\n                var top = prevTop - stackedHeight;\n\n                position.startTop = prevTop;\n                position.top = top;\n\n                prevPositionTops[index] = top;\n                return position;\n            });\n        });\n    },\n\n    /**\n     * Make positions.\n     * @returns {Array.&lt;Array.&lt;{left: number, top: number, startTop: number}>>} stackType positions\n     * @private\n     */\n    _makePositions: function() {\n        var groupPositions = this._makeBasicPositions();\n\n        if (predicate.isValidStackOption(this.options.stackType)) {\n            groupPositions = this._makeStackedPositions(groupPositions);\n        }\n\n        return groupPositions;\n    },\n\n    /**\n     * Make series data.\n     * @returns {object} series data\n     * @private\n     * @override\n     */\n    _makeSeriesData: function() {\n        var dimension = this.boundsMaker.getDimension('series'),\n            zeroTop = this._getLimitDistanceFromZeroPoint(dimension.height, this.data.limit).toMax;\n\n        return {\n            groupPositions: this._makePositions(),\n            hasRangeData: this.dataProcessor.getSeriesDataModel(this.seriesName).hasRangeData(),\n            zeroTop: zeroTop + chartConst.SERIES_EXPAND_SIZE\n        };\n    }\n});\n\nLineTypeSeriesBase.mixin(AreaChartSeries);\n\nmodule.exports = AreaChartSeries;\n</code></pre>\n        </article>\n    </section>\n\n\n\n</div>\n\n"