tui.util.defineNamespace("fedoc.content", {});
fedoc.content["helpers_rawDataHandler.js.html"] = "      <div id=\"main\" class=\"main\">\n\n\n\n    \n    <section>\n        <article>\n            <pre class=\"prettyprint source linenums\"><code>/**\n * @fileoverview Raw data handler.\n * @author NHN Ent.\n *         FE Development Team &lt;dl_javascript@nhnent.com>\n */\n\n'use strict';\n\nvar chartConst = require('../const');\n\n/**\n * Raw data Handler.\n * @module rawDataHandler\n */\nvar rawDataHandler = {\n    /**\n     * Pick stacks.\n     * @param {Array.&lt;{stack: string}>} seriesData raw series data\n     * @returns {Array.&lt;string>} stacks\n     */\n    pickStacks: function(seriesData) {\n        var stacks, uniqStacks, filteredStack;\n\n        stacks = tui.util.map(seriesData, function(seriesDatum) {\n            return seriesDatum.stack;\n        });\n\n        uniqStacks = tui.util.unique(stacks).slice(0, 2);\n\n        filteredStack = tui.util.filter(uniqStacks, function(stack) {\n            return !!stack;\n        });\n\n        if (filteredStack.length &lt; uniqStacks.length) {\n            filteredStack.push(chartConst.DEFAULT_STACK);\n        }\n\n        return filteredStack;\n    },\n\n    /**\n     * Sort series data from stacks.\n     * @param {Array.&lt;{stack: ?string}>} seriesData series data\n     * @param {Array.&lt;string>} stacks stacks\n     * @returns {Array}\n     */\n    sortSeriesData: function(seriesData, stacks) {\n        var newSeriesData = [];\n\n        tui.util.forEachArray(stacks, function(stack) {\n            var filtered = tui.util.filter(seriesData, function(datum) {\n                return (datum.stack || chartConst.DEFAULT_STACK) === stack;\n            });\n            newSeriesData = newSeriesData.concat(filtered);\n        });\n\n        return newSeriesData;\n    },\n\n    /**\n     * Remove stack of series data.\n     * @param {Array.&lt;{stack: ?string}>} seriesData series data\n     */\n    removeSeriesStack: function(seriesData) {\n        tui.util.forEachArray(seriesData, function(datum) {\n            delete datum.stack;\n        });\n    },\n\n    /**\n     * Find char type from chart name.\n     * @param {object.&lt;string, string>} seriesAlias - alias map\n     * @param {string} seriesName - series name\n     * @returns {*}\n     */\n    findChartType: function(seriesAlias, seriesName) {\n        var chartType;\n\n        if (seriesAlias) {\n            chartType = seriesAlias[seriesName];\n        }\n\n        return chartType || seriesName;\n    },\n\n    /**\n     * Get chart type map.\n     * @param {{series: (Array | object)}} rawData - raw data\n     * @returns {object.&lt;string, string>}\n     */\n    getChartTypeMap: function(rawData) {\n        var self = this;\n        var chartTypeMap = {};\n\n        if (tui.util.isObject(rawData.series)) {\n            tui.util.forEach(rawData.series, function(data, seriesName) {\n                chartTypeMap[self.findChartType(rawData.seriesAlias, seriesName)] = true;\n            });\n        }\n\n        return chartTypeMap;\n    }\n};\n\nmodule.exports = rawDataHandler;\n</code></pre>\n        </article>\n    </section>\n\n\n\n</div>\n\n"